name: 同步并更新版本

on:
  push:
    branches:
      - main 

jobs:
  sync-and-bump-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 

      - name: 同步最新 main 分支
        run: |
          git fetch origin main
          git checkout main
          git reset --hard origin/main
          git pull origin main

      - name: 自动更新版本号
        id: bump_version
        run: |
          current_version=$(grep -oP '"version":\s*"\K[0-9]+\.[0-9]+\.[0-9]+' package.json)
          IFS='.' read -r major minor patch <<< "$current_version"
          minor=$((minor + 1))
          patch=0
          new_version="$major.$minor.$patch"
          sed -i "s/\"version\": \"$current_version\"/\"version\": \"$new_version\"/" package.json
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: 创建并推送新分支
        run: |
          # 设置 Git 用户信息
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # 创建新的分支
          branch_name="version/v${{ env.new_version }}"
          git checkout -b "$branch_name"

          # 提交更改
          git add package.json
          git commit -m "版本更新至 ${{ env.new_version }} 🎉"

          # 推送到远程仓库
          git push -f origin "$branch_name"

      - name: 创建 Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: "version/v${{ env.new_version }}" # 源分支
          base: main                             # 目标分支
          title: "版本更新至 ${{ env.new_version }}"
          body: |
            自动更新版本号至 `${{ env.new_version }}` 🎉。
            请审核并确认此变更。